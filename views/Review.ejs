<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

  <title>Medicine Prescription Management</title>
  <link rel="stylesheet" href="../stylesheets/index.css">
</head>
<body>
  <!-- Header Section -->
  <header>
    <div class="logo"><img src="../images/13.png" height="40" width="60"> 
             <a href="/signupx">MedPal-AI Chatbot</a>
    </div>
    <nav class="nav-menu">
      <ul>
        <li><a href="/home"><b>Home</b></a></li>
        <li><a href="/about"><b>About</b></a></li>
        <li><a href="/services"><b>Services</b></a></li>
        <li><a href="/Review"><b>Review</b></a></li>
        <li><a href="/contact"><b>Contact Us</b></a></li>
      </ul>
    </nav>

    
    <div class="menu-icon" onclick="toggleMenu()">â˜°</div>


</header>




<div class="input-container">
    <input type="text" id="xx1" placeholder="Name" required >
    <input type="text" id="xx2" placeholder="Feedback" required >

   <!-- <input type="file" id="imgFile" accept="image/*" required> -->

    <button id="btnu">Publish</button>
  </div>





    <section id="section-2">
        <div class="row row-cols-1 row-cols-md-1 g-4" id="zn">
            <div class="col" id="zn">
              
              <div class="card h-100" id="zn1">
                
                <img src="..." class="card-img-top" alt="...">
                <div class="card-body">
                  
                  <h5 class="card-title">...</h5>
                  <p class="card-text">......</p>
                </div>
                <div class="card-footer">
                  <small class="text-body-secondary">BOOK NOW</small>
                </div>
              </div>
            </div>
          </div>
    </section>









    <script>
        const addButton = document.querySelector("#btnu");
      
      // Function to handle adding item
      addButton.addEventListener("click", () => {
          const title = document.querySelector("#xx1").value.trim();
          const sub = document.querySelector("#xx2").value.trim();
      
          //const imgFile = document.querySelector("#imgFile").files[0]; // Get the selected file
      
      
      
      /*
          const reader = new FileReader();
          reader.readAsDataURL(imgFile); // Convert image to Base64
      
          reader.onload = function () {
          const imgData = reader.result; // Base64 string of image
      
      */
      
      
          //document.querySelector("#xx1").value = "";
          //document.querySelector("#xx2").value = "";
      
      
          // Retrieve items from localStorage
          let itemJsonArray = localStorage.getItem('itemsJson') ? JSON.parse(localStorage.getItem('itemsJson')) : [];
      
          // Add new item to the array
         // itemJsonArray.push({ title,sub,img: imgData });
         itemJsonArray.push({ title,sub });
      
      
          // Clear input fields
          document.querySelector("#xx1").value = document.querySelector("#xx2").value = "";
            //  document.querySelector("#imgFile").value = ""; // Clear file input
      
      
          // Update localStorage with the modified array
          localStorage.setItem('itemsJson', JSON.stringify(itemJsonArray));
      
      
      
       
      
      
          // Update the table
          updatex(itemJsonArray);
      });
      
      
      /*
      // Function to handle deleting item
      const handleDelete = (itemIndex) => {
          // Retrieve items from localStorage
          let itemJsonArray = localStorage.getItem('itemsJson') ? JSON.parse(localStorage.getItem('itemsJson')) : [];
      
          // Remove the item at the specified index
          itemJsonArray.splice(itemIndex, 1);
      
          // Update localStorage with the modified array
          localStorage.setItem('itemsJson', JSON.stringify(itemJsonArray));
      
          // Update the table
          updatex(itemJsonArray);
      };
      
      */
      
      
      // Function to update the table
      const updatex = (items) => {
          let tableBody = document.querySelector("#section-2  .row");
          let str = "";
      
          // Generate table rows for each item
          items.forEach((item, index) => {
              str += ` <div class="col" id="zn">
                
                      <div class="card h-100" id="zn1">
                       
                         
                          <div class="card-body">
                            
                              <h5 class="card-title">${item.title}</h5>
                              <p class="card-text">${item.sub}</p>
                          </div>
                          <div class="card-footer">
                              <small class="text-body-secondary">3 min. ago</small>
                          </div>
                      </div>
                  </div>
                `;
          });
      
          // Update table body
          tableBody.innerHTML = str;
      };
      
      // Function to initialize the table on page load
      const initializeTable = () => {
          let itemJsonArray = localStorage.getItem('itemsJson') ? JSON.parse(localStorage.getItem('itemsJson')) : [];
          updatex(itemJsonArray);
      };
      
      // Call initializeTable function to set up the table when the page loads
      initializeTable();
      </script>
      














 


  <style>

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  /* Body styling for light theme */
  body {
    font-family: Arial, sans-serif;
    color: #333;
    background-color: #f9f9f9;
  }
  
  /* Header styling */
  header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 25px;
    background-color: rgb(127, 216, 246);
    border-bottom: 3px solid black;
    border-style: solid black;
    position: sticky;
    top: 0;
    z-index: 1000;
  }
  
  /* Logo styling */
  .logo a {
    font-size: 2.5em;
    font-weight: bold;
    color: white;
    text-decoration: solid;
  }





      .input-container{
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 50px;
        
        gap: 3rem;
        border-radius: 7px;
      }
      #btnu{
        border-radius: 7px;
        padding: 5px;
        border: none;
        background: #ebe8e8;
       
      }

      #xx1{
        border-radius: 7px;
        padding: 3px;
        border: none;
        background: #ebe8e8;
        
      }

      #xx2{
        border-radius: 7px;
        padding: 3px;
        border: none;
        background: #ebe8e8;
      }

      #imgFile{
        border-radius: 7px;
        padding: 3px;
        border: none;
        background: #ebe8e8;
      }
      #zn1{
        width: 600px;
        height: 700px;
      }
      #zn{
        display: flex;
        justify-content: center;
        align-items: center;
      }






  </style>



</body>
</html>